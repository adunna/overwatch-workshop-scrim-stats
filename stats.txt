INFRA:

- python webapp base (maybe flask?)
-- something host on github, so javascript would be better i think

OTHER TOOL IDEAS:

- share replay codes amongst team(s)? can keep track of patches and add notes to them, make them available to teams

WORKSHOP CHANGES:

- log map & game mode at beginning in first row
- log general map things over time separately from each player's row, so we don't have the same variables repeated
-- match time, 

s01 = s02, s03, s04

s02 = s05, s06, s07
s03 = s08, s09, s10
s04 = s11, s12, s13

s05 = s14, s15, s16
s06 = s17, s18, s19
s07 = s20, s21, s22
s08 = s23, s24, s25
s09 = s26, s27, s28
s10 = s29, s30, s31
s11 = s32, s33, s34
s12 = s35, s36, s37
s13 = s38, s39, s40


directly available player stats: (22 vars)

- timestamp, player name, hero, and team
- hero damage dealt
- barrier damage dealt
- damage blocked
- damage taken
- deaths
- elims
- final blows
- enviro deaths
- enviro kills
- healing dealt
- objective kills
- solo kills
- ultimates earned
- ultimates used
(hero section)
- healing received
(other section)
- ult charge over time
- player closest to reticle
- xyz position

map stats:

- payload progress percentage / point capture percentage /  (make sure to set dependent on map)

derived player stats:

- stuff per 10
- time to ult
-- time ult held
- time staggered (death after fight)
- feed deaths (death before fight)
- ult efficiency (ults earned / ults used)
- poke damage taken (damage before fight)

derived fight stats:

- first ult
- first deaths
- focus fire during fight
-- use player closest to reticle
- grouped-ness
- rotation time

other ideas:

- meta-dependent stats, ex:
-- double shield
--- peeking without shield?